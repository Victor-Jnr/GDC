version: '3.8'

services:
  localstack:
    image: "${LS_IMAGE-localstack/localstack}:${LS_VERSION-latest}"
    container_name: "${LS_MAIN_CONTAINER_NAME-localstack}"
    stdin_open: true
    tty: true
    networks:
      devnet:
    environment:
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-}
      - LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - MAIN_CONTAINER_NAME=${LS_MAIN_CONTAINER_NAME-localstack}
      - EXTRA_CORS_ALLOWED_ORIGINS=http://host.docker.internal:4566
      - DISABLE_CORS_CHECKS=1
      - DEBUG=${DEBUG-}
      # - LS_LOG=trace
      # how long to keep idle lambdas around
      - LAMBDA_RUNTIME_ENVIRONMENT_TIMEOUT=15
      # remove idle lambdas
      - LAMBDA_REMOVE_CONTAINERS=1
      # Tell Localstack to put Lambda containers on the same shared network
      - LAMBDA_DOCKER_NETWORK=${DEVNET_NAME-devnet}
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY-}
      # enable IAM checks. Only takes action if IAM_SOFT_MODE=0
      - ENFORCE_IAM=${LS_ENFORCE_IAM-1}
      # only check IAM do not enforce it
      - IAM_SOFT_MODE=${LS_IAM_SOFT_MODE-1}
      - OPENSEARCH_ENDPOINT_STRATEGY=port
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${LOCALSTACK_VOLUME_DIR:-/tmp/ls_volume}:/var/lib/localstack"

networks:
  devnet:
    name: ${DEVNET_NAME-devnet}
    external: true

